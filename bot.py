# bot.py

import os
import logging
import threading
import datetime
from http.server import HTTPServer, BaseHTTPRequestHandler

from telegram import Update, ParseMode
from telegram.ext import Updater, CommandHandler, CallbackContext
from telegram.error import Conflict

# ============= –ù–ê–°–¢–†–û–ô–ö–ò =============

# –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ: –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —É–∫–∞–∑—ã–≤–∞–µ–º –≤—Ä–µ–º—è (HH:MM) –∏ HTML-—Ç–µ–∫—Å—Ç
SCHEDULE = [
    # –í 20:50 ‚Äî –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –¥–µ–ø–æ–∑–∏—Ç—ã –∏–∑ —Ç–∞–±–ª–∏—Ü—ã API deposits
    {
        "time": "20:50",
        "text": 'üîÑ <a href="https://docs.google.com/spreadsheets/d/1LggaqDZjPwGGj7Mqher4D6mHhgmhL1Ed/edit?pli=1&gid=1095733793">–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –¥–µ–ø–æ–∑–∏—Ç—ã –∏–∑ —Ç–∞–±–ª–∏—Ü—ã API deposits</a>'
    },
    # –í 20:50 ‚Äî —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –ê–≤—Ç–æ –º–µ—Ç–æ–¥—ã –æ –≤—ã–∫–ª—é—á–µ–Ω–∏–∏ BDT_rocket_gb
    {
        "time": "20:50",
        "text": (
            "üì¢ <b>–ê–≤—Ç–æ –º–µ—Ç–æ–¥—ã:</b>\n"
            "–í—ã–∫–ª—é—á–∏–ª–∏ BDT_rocket_gb –Ω–∞ —Å–∞–π—Ç–µ\n"
            "@jurxis @nii_med @gnxt_monitoring @Lika_mbt @Vikgmbt"
        )
    },
    # –í 21:55 ‚Äî –≤—ã–∫–ª—é—á–∏—Ç—å –º–µ—Ç–æ–¥ –≤—ã–ø–ª–∞—Ç Khalti_birpay
    {
        "time": "21:55",
        "text": (
            '‚ùå <a href="https://mostbet2.com/admin/payout-route/list?filter%5Bcurrency%5D%5Btype%5D=&filter%5BpayoutMethod%5D%5Bvalue%5D=khalti_birpay">'
            "–í—ã–∫–ª—é—á–∏—Ç—å –º–µ—Ç–æ–¥ –≤—ã–ø–ª–∞—Ç Khalti_birpay –≤ –∞–¥–º–∏–Ω–∫–µ</a>"
        )
    },
    # –í 22:20 ‚Äî –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –¥–µ–ø–æ–∑–∏—Ç–æ–≤ BDT
    {
        "time": "22:20",
        "text": 'üîÑ <a href="https://docs.google.com/spreadsheets/d/1LggaqDZjPwGGj7Mqher4D6mHhgmhL1Ed/edit?pli=1&gid=1393952854">–°–¥–µ–ª–∞—Ç—å –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –¥–µ–ø–æ–∑–∏—Ç–æ–≤ BDT</a>'
    },
    # –í 02:45 ‚Äî –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –¥–µ–ø–æ–∑–∏—Ç–æ–≤ BDT
    {
        "time": "02:45",
        "text": 'üîÑ <a href="https://docs.google.com/spreadsheets/d/1LggaqDZjPwGGj7Mqher4D6mHhgmhL1Ed/edit?pli=1&gid=1393952854">–°–¥–µ–ª–∞—Ç—å –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –¥–µ–ø–æ–∑–∏—Ç–æ–≤ BDT</a>'
    },
    # –í—ã–∫–ª—é—á–∏—Ç—å –¥–µ–ø–æ–∑–∏—Ç—ã –∏ –≤—ã–ø–ª–∞—Ç—ã –∞–≥–µ–Ω—Ç–∞ Naji_MAD
    {
        "time": "03:00",
        "text": (
            '‚ö†Ô∏è <a href="https://docs.google.com/spreadsheets/d/1bmnhijfGGcA9Vp1Zkw07JoOFCE6IJk0U/edit?pli=1&gid=1749528799">'
            "–í—ã–∫–ª—é—á–∏—Ç—å –¥–µ–ø–æ–∑–∏—Ç—ã –∏ –≤—ã–ø–ª–∞—Ç—ã –∞–≥–µ–Ω—Ç–∞ Naji_MAD</a>"
        )
    },
    # –í–∫–ª—é—á–∏—Ç—å API –¥–µ–ø–æ–∑–∏—Ç—ã –ø–æ BDT
    {
        "time": "03:05",
        "text": '‚úÖ <a href="https://docs.google.com/spreadsheets/d/1LggaqDZjPwGGj7Mqher4D6mHhgmhL1Ed/edit?pli=1&gid=1095733793">–í–∫–ª—é—á–∏—Ç—å API –¥–µ–ø–æ–∑–∏—Ç—ã –ø–æ BDT</a>'
    },
    # –í—ã–∫–ª—é—á–∏—Ç—å –¥–µ–ø–æ–∑–∏—Ç—ã BDT (—Ç–∞–π–º—Å–ª–æ—Ç –¥–æ 3:00 GMT+3)
    {
        "time": "02:50",
        "text": '‚è≤Ô∏è –í—ã–∫–ª—é—á–∏—Ç—å –¥–µ–ø–æ–∑–∏—Ç—ã BDT (—Ç–∞–π–º—Å–ª–æ—Ç –¥–æ 3:00 GMT+3)'
    },
    # –í–∫–ª—é—á–∏—Ç—å –¥–µ–ø–æ–∑–∏—Ç—ã BDT_rocket_gb –≤ –∞–¥–º–∏–Ω–∫–µ + —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –ê–≤—Ç–æ –º–µ—Ç–æ–¥—ã
    {
        "time": "03:10",
        "text": (
            'üîÑ <a href="https://mostbet2.com/admin/app/paymentroute/list?filter%5BpaymentMethod%5D%5Bvalue%5D=rocket_gb">'
            "–í–∫–ª—é—á–∏—Ç—å –¥–µ–ø–æ–∑–∏—Ç—ã BDT_rocket_gb –≤ –∞–¥–º–∏–Ω–∫–µ</a>\n"
            "üì¢ –ê–≤—Ç–æ –º–µ—Ç–æ–¥—ã: –í–∫–ª—é—á–∏–ª–∏ BDT_rocket_gb –Ω–∞ —Å–∞–π—Ç–µ @jurxis @nii_med @gnxt_monitoring @Lika_mbt @Vikgmbt"
        )
    },
    # –í 06:20 ‚Äî –≤—ã–∫–ª—é—á–∏—Ç—å —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –∏ –≤—ã–ø–ª–∞—Ç—ã —à–∏—Ñ—Ç–æ–≤—ã—Ö –∞–≥–µ–Ω—Ç–æ–≤ –ò–Ω–¥–∏–∏
    {
        "time": "06:20",
        "text": 'üîí <a href="https://docs.google.com/spreadsheets/d/1J89GcldOX_xfqxNVhzhcjIGmuQ40Y01QsoMbJWDstCU/edit?pli=1&gid=2063840569">–í—ã–∫–ª—é—á–∏—Ç—å —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –∏ –≤—ã–ø–ª–∞—Ç—ã —à–∏—Ñ—Ç–æ–≤—ã—Ö –∞–≥–µ–Ω—Ç–æ–≤ –ò–Ω–¥–∏–∏</a>'
    },
    # –í 11:20 ‚Äî –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –¥–µ–ø–æ–∑–∏—Ç–æ–≤ BDT
    {
        "time": "11:20",
        "text": 'üîÑ <a href="https://docs.google.com/spreadsheets/d/1LggaqDZjPwGGj7Mqher4D6mHhgmhL1Ed/edit?pli=1&gid=1393952854">–°–¥–µ–ª–∞—Ç—å –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –¥–µ–ø–æ–∑–∏—Ç–æ–≤ BDT</a>'
    },
    # –í 18:20 ‚Äî –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –¥–µ–ø–æ–∑–∏—Ç–æ–≤ BDT
    {
        "time": "18:20",
        "text": 'üîÑ <a href="https://docs.google.com/spreadsheets/d/1LggaqDZjPwGGj7Mqher4D6mHhgmhL1Ed/edit?pli=1&gid=1393952854">–°–¥–µ–ª–∞—Ç—å –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –¥–µ–ø–æ–∑–∏—Ç–æ–≤ BDT</a>'
    },
    # –í 10:00 ‚Äî —Ä–µ–≥—É–ª—è—Ä–Ω–∞—è –≤—ã–≥—Ä—É–∑–∫–∞ –∏–∑ Greenback
    {
        "time": "10:00",
        "text": (
            'üìä <a href="https://new.admgrnb.com/greenback/payment-orders">'
            "–†–µ–≥—É–ª—è—Ä–Ω–∞—è –≤—ã–≥—Ä—É–∑–∫–∞! –î–æ 12:00 –ú–°–ö –≤—ã–≥—Ä—É–∑–∫–∞ –∞–ø–ø—Ä—É–≤–Ω—É—Ç—ã—Ö –¥–µ–ø–æ–∑–∏—Ç–æ–≤ –∏–∑ Greenback</a>"
        )
    },
    # –í 10:00 (–ø–æ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞–º) ‚Äî 3 –≤—ã–≥—Ä—É–∑–∫–∏ –®–∞–º–∏–ª—é
    {
        "time": "10:00",
        "text": (
            'üóìÔ∏è <b>–ü–æ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞–º –¥–æ 12:00 –ú–°–ö:</b> –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –®–∞–º–∏–ª—é 3 –≤—ã–≥—Ä—É–∑–∫–∏\n'
            '<a href="https://confluence.dats.tech/pages/viewpage.action?pageId=760321781">'
            "–°—Å—ã–ª–∫–∞ –Ω–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é</a>"
        )
    },
]

# –û—Å—Ç–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã
BOT_TOKEN = os.environ['BOT_TOKEN']
CHAT_ID   = os.environ['CHAT_ID']
PORT      = int(os.environ.get("PORT", "8000"))

# ====== –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ HTTP-—Å–µ—Ä–≤–µ—Ä (–¥–ª—è Render) ======
logging.basicConfig(
    format="%(asctime)s ‚Äî %(levelname)s ‚Äî %(message)s",
    level=logging.INFO
)
logger = logging.getLogger(__name__)

class HealthHandler(BaseHTTPRequestHandler):
    def do_GET(self):
        self.send_response(200)
        self.send_header("Content-Type", "text/plain")
        self.end_headers()
        self.wfile.write(b"OK")

def run_http_server():
    server = HTTPServer(('0.0.0.0', PORT), HealthHandler)
    logger.info(f"HTTP healthcheck listening on port {PORT}")
    server.serve_forever()

# ====== Error-handler –¥–ª—è –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ ======
def error_handler(update: Update, context: CallbackContext):
    err = context.error
    if isinstance(err, Conflict):
        return  # –ø—Ä–æ—Å—Ç–æ –º–æ–ª—á–∞ –∏–≥–Ω–æ—Ä–∏–º
    logger.error("–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞", exc_info=err)

# ====== –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ ======
def start(update: Update, context: CallbackContext):
    update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–Ω–∞–ø–æ–º–∏–Ω–∞–ª–∫–∞.")

def test(update: Update, context: CallbackContext):
    update.message.reply_text("‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ!")

# ====== –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∏–∑ SCHEDULE ======
def schedule_notifications(job_queue):
    for item in SCHEDULE:
        hh, mm = map(int, item["time"].split(":"))
        text = item["text"]
        # –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ –∑–∞–¥–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
        job_queue.run_daily(
            callback=lambda ctx, m=text: ctx.bot.send_message(
                chat_id=CHAT_ID,
                text=m,
                parse_mode=ParseMode.HTML
            ),
            time=datetime.time(hh, mm),
        )
    logger.info("–í—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω—ã —Å–æ–≥–ª–∞—Å–Ω–æ SCHEDULE")

# ====== –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ ======
def main():
    # 1) –°—Ç–∞—Ä—Ç HTTP healthcheck
    threading.Thread(target=run_http_server, daemon=True).start()

    # 2) –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
    updater = Updater(token=BOT_TOKEN, use_context=True)
    updater.bot.delete_webhook()

    dp = updater.dispatcher
    dp.add_error_handler(error_handler)
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("test", test))

    # 3) –ü–ª–∞–Ω–∏—Ä—É–µ–º –≤—Å–µ –≤–∞—à–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
    schedule_notifications(updater.job_queue)

    # 4) –ó–∞–ø—É—Å–∫–∞–µ–º polling
    updater.start_polling(drop_pending_updates=True)
    logger.info("Polling –Ω–∞—á–∞—Ç, –±–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")
    updater.idle()

if __name__ == "__main__":
    main()
